//---------------------------------------------------------------------------------------------------
// <auto-generated>
//    This code was generated by T4Model template for T4 (https://github.com/linq2db/t4models).
//    Changes to this file may cause incorrect behavior and will be lost if the code is regenerated.
// </auto-generated>
//---------------------------------------------------------------------------------------------------
using System;
using System.Linq;

using LinqToDB;
using LinqToDB.Mapping;

namespace IridiumDatabase
{
	/// <summary>
	/// Database       : iridium_master_server
	/// Data Source    : 127.0.0.1
	/// Server Version : 5.6.21-log
	/// </summary>
	public partial class iridium_master_serverDB : LinqToDB.Data.DataConnection
	{
		public ITable<account> accounts { get { return this.GetTable<account>(); } }

		public iridium_master_serverDB()
		{
			InitDataContext();
		}

		public iridium_master_serverDB(string configuration)
			: base(configuration)
		{
			InitDataContext();
		}

		partial void InitDataContext();
	}

	[Table("accounts")]
	public partial class account
	{
		[PrimaryKey(1), Identity   ] public uint      id          { get; set; } // int(10) unsigned
		[PrimaryKey(2), NotNull    ] public string    login       { get; set; } // varchar(45)
		[Column,        NotNull    ] public byte[]    password    { get; set; } // binary(64)
		[Column,           Nullable] public DateTime? create_date { get; set; } // datetime
	}

	public static partial class TableExtensions
	{
		public static account Find(this ITable<account> table, uint id, string login)
		{
			return table.FirstOrDefault(t =>
				t.id    == id &&
				t.login == login);
		}
	}
}
